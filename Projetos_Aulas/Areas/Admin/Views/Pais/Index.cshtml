@model X.PagedList.PagedList<App.Models.Pais>
@{
    ViewData["Title"] = "Index";
}


<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form class="d-flex align-items-center" asp-action="Index" method="get">
    <span class="me-2">Consulta: </span>
    <input type="text" name="txtFiltro" placeholder="Digite aqui o que procura" value="@ViewBag.txtFiltro"
        class="form-control">
    <button class="btn btn-primary ms-1" type="submit"><i class="bi bi-search"></i> Buscar</button>

    <select name="selOrdenacao" class="form-control ms-2">
        <option value="Nome">Ordenar por Nome</option>
        <option value="Continente">Ordenar por Continente</option>
        <option value="Capital">Ordenar por Capital</option>
        <option value="Populacao">Ordenar por População</option>
    </select>

</form>

<table class="table table-striped">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model[0].Nome)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Capital)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Populacao)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Continente)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Nome)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Capital)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Populacao)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Continente.Nome)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.IdPaises">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.IdPaises">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.IdPaises">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<div class="d-flex justify-content-center">
    <ul class="pagination">
        @{
            string primeira = "";
            string ultima = "";
        }

        @if (!Model.HasPreviousPage)
            primeira = "disabled";

        @if (!Model.HasNextPage)
            ultima = "disabled";

        <li class="page-item @primeira">
            <a class="page-link" asp-route-pagina="1" asp-route-txtFiltro="@ViewData["txtFiltro"]">&lt;&lt;</a>
        </li>
        <li class="page-item @primeira">
            <a class="page-link" asp-route-pagina="@(Model.PageNumber - 1)"
                asp-route-txtFiltro="@ViewData["txtFiltro"]">&lt;</a>
        </li>

        @for (int i = 1; i <= Model.PageCount; i++)
        {
            <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                <a class="page-link" asp-route-pagina="@i" asp-route-txtFiltro="@ViewData["txtFiltro"]">@i</a>
            </li>
        }

        <li class="page-item @ultima">
            <a class="page-link" asp-route-pagina="@(Model.PageNumber + 1)"
                asp-route-txtFiltro="@ViewData["txtFiltro"]">></a>
        </li>
        <li class="page-item @ultima">
            <a class="page-link" asp-route-pagina="@Model.PageCount" asp-route-txtFiltro="@ViewData["txtFiltro"]">>></a>
        </li>

    </ul>
</div>